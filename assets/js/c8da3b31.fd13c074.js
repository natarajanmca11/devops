"use strict";(self.webpackChunkfacebook=self.webpackChunkfacebook||[]).push([[4957],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),l=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(p.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(t),m=a,f=d["".concat(p,".").concat(m)]||d[m]||c[m]||i;return t?r.createElement(f,o(o({ref:n},u),{},{components:t})):r.createElement(f,o({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2239:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var r=t(7462),a=t(3366),i=(t(7294),t(3905)),o=["components"],s={slug:"azure-devops",title:"Microsoft Azure DevOps",authors:["natarajanganapathi"],tags:["devops","azure-devops","pipeline"],sidebar_position:3},p="Sample Azure DevOps Pipeline",l={unversionedId:"pipeline/azure-devops",id:"pipeline/azure-devops",title:"Microsoft Azure DevOps",description:"1. Before CI (Tag Creation - Build Version, Environment, )",source:"@site/docs/pipeline/azure-devops.md",sourceDirName:"pipeline",slug:"/pipeline/azure-devops",permalink:"/devops/docs/pipeline/azure-devops",editUrl:"https://github.com/natarajanmca11/devops/blob/main/docs/pipeline/azure-devops.md",tags:[{label:"devops",permalink:"/devops/docs/tags/devops"},{label:"azure-devops",permalink:"/devops/docs/tags/azure-devops"},{label:"pipeline",permalink:"/devops/docs/tags/pipeline"}],version:"current",sidebarPosition:3,frontMatter:{slug:"azure-devops",title:"Microsoft Azure DevOps",authors:["natarajanganapathi"],tags:["devops","azure-devops","pipeline"],sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Github Actions",permalink:"/devops/docs/pipeline/github-actions"},next:{title:"GitLab",permalink:"/devops/docs/pipeline/gitlab"}},u=[],c={toc:u};function d(e){var n=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"sample-azure-devops-pipeline"},"Sample Azure DevOps Pipeline"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},'# Sample Task\n\n  steps:\n    - task: MyTask@1           # Replace \'MyTask@1\' with the actual task name/version\n      name: compileTask        # Unique name for the task instance\n      displayName: "Run MyTask with all properties"\n      enabled: true            # Task is enabled (default is true, can also be omitted in this case)\n      condition: succeeded()   # Run only if previous steps or jobs succeeded\n      continueOnError: false   # Do not continue if the task fails\n      alwaysRun: false         # Prevent this task from always running regardless of previous outcomes\n      timeoutInMinutes: 30     # Task timeout (30 minutes maximum execution time)\n      cancelTimeoutInMinutes: 5 # Graceful cleanup timeout (5 minutes) if the pipeline is canceled\n      retryCountOnTaskFailure: 3 # Retry up to 3 times on task failure\n      dependsOn: \n        - previousTask         # Task depends on a previously defined task (example name)\n      inputs:\n        input1: "value1"       # Replace with actual input keys and values required by the task\n        input2: "value2"\n      env:                     # Environment variables passed to the task\n        MY_CUSTOM_VAR: "value"\n        ANOTHER_VAR: "123"\n')),(0,i.kt)("h1",{id:"stages"},"Stages"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Before CI (Tag Creation - Build Version, Environment, )"),(0,i.kt)("li",{parentName:"ol"},"CI (Build)"),(0,i.kt)("li",{parentName:"ol"},"After CI (Security Scan, SAST, DAST)"),(0,i.kt)("li",{parentName:"ol"},"Before CD (Tag Creation - Deploy version, Environment)"),(0,i.kt)("li",{parentName:"ol"},"CD (Including Canary/Blue-Green Deployment)"),(0,i.kt)("li",{parentName:"ol"},"After CD (Smoke Tests, Health Checks, Load Testing, Functional/QA Testing, Tag Creation)"),(0,i.kt)("li",{parentName:"ol"},"Finally (Monitoring, Notifications, Reporting, Clean-up, Tag Creation - Status)")),(0,i.kt)("h1",{id:"tools"},"Tools"))}d.isMDXComponent=!0}}]);