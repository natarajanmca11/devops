"use strict";(self.webpackChunkfacebook=self.webpackChunkfacebook||[]).push([[4843],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(t),m=o,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||i;return t?r.createElement(f,a(a({ref:n},p),{},{components:t})):r.createElement(f,a({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7023:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],s={slug:"copilot",title:"Copilot",tags:["ai","copilot"],sidebar_position:1},c=void 0,l={unversionedId:"AI/copilot",id:"AI/copilot",title:"Copilot",description:"Configure Copilot Agent in VS Code",source:"@site/docs/AI/copilot.md",sourceDirName:"AI",slug:"/AI/copilot",permalink:"/devops/docs/AI/copilot",editUrl:"https://github.com/natarajanmca11/devops/blob/main/docs/AI/copilot.md",tags:[{label:"ai",permalink:"/devops/docs/tags/ai"},{label:"copilot",permalink:"/devops/docs/tags/copilot"}],version:"current",sidebarPosition:1,frontMatter:{slug:"copilot",title:"Copilot",tags:["ai","copilot"],sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"PODMAN",permalink:"/devops/docs/tools/podman"}},p=[{value:"Configure Copilot Agent in VS Code",id:"configure-copilot-agent-in-vs-code",children:[],level:2},{value:"instructions.md file sample",id:"instructionsmd-file-sample",children:[],level:2}],u={toc:p};function d(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"configure-copilot-agent-in-vs-code"},"Configure Copilot Agent in VS Code"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"name: azure-openai # gpt-4-custom / ollama-local\nprovider: azure-openai # openai / openai-compatible\napi_base: https://YOUR-RESOURCE-NAME.openai.azure.com/ # Ani Open AI Api base url\napi_key: ${env:AZURE_OPENAI_API_KEY}\nmodel: gpt-35-turbo #  gpt-4 / llama3  \ninstructions_path: .copilot/instructions.md\n")),(0,i.kt)("p",null,"create ",(0,i.kt)("inlineCode",{parentName:"p"},"instructions.md")," file in ",(0,i.kt)("inlineCode",{parentName:"p"},".copilot")," folder."),(0,i.kt)("h2",{id:"instructionsmd-file-sample"},"instructions.md file sample"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-md"},"You are an experienced .NET developer working on a clean architecture project with distinct layers: Presentation (API), Application, Domain, and Infrastructure. Follow these guidelines for each layer:\n\n### General Guidelines\n- Adhere to best practices for modern .NET (C# 10+), SOLID principles, and clean code.\n- Use async/await for asynchronous code.\n- All code samples should include necessary `using` statements.\n\n### Application Layer\n- Focus on application\u2019s use cases and business logic coordination.\n- Use MediatR for commands and queries.\n- Handlers should orchestrate, never contain domain or infrastructure logic.\n- Apply validation using FluentValidation.\n\n### Domain Layer\n- Model core business entities and rules.\n- Use domain-driven design patterns (Aggregates, Entities, Value Objects, Domain Events).\n- Avoid any infrastructure or UI dependencies.\n- Business logic lives here.\n\n### Infrastructure Layer\n- Implement access to external systems (Database, APIs, File System, etc.).\n- Use Dependency Injection for all services.\n- Never place business logic here.\n- For data access, prefer Entity Framework Core repositories.\n\n### API/Presentation Layer\n- Handle HTTP requests/responses (controllers/endpoints).\n- Validate input at request boundaries.\n- Do not contain business logic.\n- Return standardized error responses.\n\nWhenever the user\u2019s request or code context indicates a particular layer, adapt your code, explanations, and best practices to match that layer\u2019s responsibilities.\n\n")))}d.isMDXComponent=!0}}]);